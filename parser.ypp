%{
        #include <cstdio>
        #include <stdio.h>
        #include <iostream>
        #include <map>
        #include <string>
        using namespace std;
        int yylex ();
        int yyparse();
        int getLineNumber();
        int yyerror(const char *s);
        

%}

%code requires 
{ 
#include "AST.hpp" 
#include "Symbols.hpp"
#include "AST.cpp"
}

%union {
        Symbol *symbol;
        AST *ast;
}

%token KW_CHAR          
%token KW_INT         
%token KW_IF             
%token KW_THEN           
%token KW_ELSE           
%token KW_WHILE          
%token KW_READ           
%token KW_PRINT          
%token KW_RETURN      
%token<symbol> TK_IDENTIFIER  
%token<symbol> LIT_INT           
%token<symbol> LIT_CHAR          
%token<symbol> LIT_STRING     
%token TOKEN_ERROR    

%left '+' '-'
%left '*' '/'
%left '<' '>' '=' '&' '|'
%right '~'

%%

program: 
        dec_list
        ;

dec_list : 
        dec dec_list
        | dec
        ;
dec: 
     type TK_IDENTIFIER '=' lit ';'
   | type vector '=' lit_list ';'
   | type vector ';'
   | type TK_IDENTIFIER '(' param_list ')' block 
        ;

vector: TK_IDENTIFIER '[' LIT_INT ']'
        ;

lit_list: lit lit_list
        | lit
        ;



param_list: 
        type TK_IDENTIFIER  param_list_tail
        | 
        ;
        
param_list_tail : ',' type TK_IDENTIFIER param_list_tail 
        | 
        ;

type: KW_INT
    | KW_CHAR
    ;

block: '{' cmd_list '}'
        ;

cmd_list: cmd cmd_list
        | 
        ;

cmd:';'
   | KW_IF '('expr')' KW_THEN cmd
   | KW_IF '('expr')' KW_THEN cmd KW_ELSE cmd
   | KW_READ TK_IDENTIFIER ';'
   | KW_RETURN expr ';'
   | KW_PRINT print_list ';'
   | KW_WHILE '('expr')' cmd
   | block
   | TK_IDENTIFIER '=' expr ';'
   | TK_IDENTIFIER '[' expr ']' '=' expr ';'

  ;

expr: 
        expr '+' expr
        | expr '-' expr
        | expr '*' expr
        | expr '/' expr
        | expr '<' expr
        | expr '>' expr
        | expr '=' expr
        | expr '&' expr
        | expr '|' expr
        | expr '~' expr
        | '(' expr ')'
        | TK_IDENTIFIER '(' arg_list ')'
        | TK_IDENTIFIER 
        | TK_IDENTIFIER '[' expr ']'
        | lit
        ;

lit: 
    LIT_INT 
    | LIT_CHAR
    ;

print_list: expr print_list
        | LIT_STRING print_list
        | expr
        | LIT_STRING
        ;

arg_list:
        expr arg_list_tail
        | 
        ;

arg_list_tail:
        ',' expr arg_list_tail
        | 
        ;
%%

int yyerror(const char *s) {
  fprintf(stderr, "Error: %s in line %d\n", s, getLineNumber());
  exit(3);
  return 3;
}

void print_ast(AST *ast, int depth) {
    for (int i = 0; i < depth; i++) {
        cout << "  ";
    }
    cout << ast->type << " " << ast->symbol->get_text() << endl;
    for (int i = 0; i < ast->children.size(); i++) {
        print_ast(ast->children[i], depth + 1);
    }
}