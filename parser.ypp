%{
        #include <cstdio>
        #include <stdio.h>
        #include <iostream>
        #include <map>
        #include <string>
        using namespace std;
        // int yyerror(const char *s);
        int yylex ();
        int getLineNumber();
        int yyerror(const char *s);

%}

%token KW_CHAR          
%token KW_INT         
%token KW_IF             
%token KW_THEN           
%token KW_ELSE           
%token KW_WHILE          
%token KW_READ           
%token KW_PRINT          
%token KW_RETURN      
%token TK_IDENTIFIER  
%token LIT_INT           
%token LIT_CHAR          
%token LIT_STRING     
%token TOKEN_ERROR    

%left '+' '-'
%left '*' '/'
%left '<' '>' '=' '&' '|'
%right '~'

%%

program: 
        dec_list
        ;

dec_list : 
        dec dec_list
        | dec
        ;
dec: 
     type TK_IDENTIFIER '=''=' lit ';'
   | type TK_IDENTIFIER '[' LIT_INT ']' '=''=' lit_list';'
   | type TK_IDENTIFIER '[' LIT_INT ']' ';'
   | type TK_IDENTIFIER '(' param_list ')' block 
        ;

lit_list: lit lit_list
        | lit
        ;



param_list: 
        type TK_IDENTIFIER  param_list_tail
        | 
        ;
        
param_list_tail : ',' type TK_IDENTIFIER param_list_tail 
        | 
        ;

type: KW_INT
    | KW_CHAR
    ;

block: '{' cmd_list '}'
        ;

cmd_list: cmd cmd_list
        | cmd
        ;

cmd: ';' 
   | KW_IF '('expr')' KW_THEN cmd
   | KW_IF '('expr')' KW_THEN cmd KW_ELSE cmd
   | KW_READ TK_IDENTIFIER ';'
   | KW_RETURN expr ';'
   | KW_PRINT print_list ';'
   | KW_WHILE '('expr')' cmd
   | block
   | TK_IDENTIFIER '=''=' expr ';'
   | TK_IDENTIFIER '[' expr ']' '=''=' expr ';'

  ;

expr: 
        expr '+' expr
        | expr '-' expr
        | expr '*' expr
        | expr '/' expr
        | expr '<' expr
        | expr '>' expr
        | expr '=' expr
        | expr '&' expr
        | expr '|' expr
        | expr '~' expr
        | '(' expr ')'
        | TK_IDENTIFIER '(' arg_list ')'
        | TK_IDENTIFIER
        | TK_IDENTIFIER '[' expr ']'
        | lit
        ;

lit: 
    LIT_INT
    | LIT_CHAR
    | LIT_STRING
    ;

print_list: 
        expr print_list_tail
        | LIT_STRING print_list_tail
        ;

print_list_tail:
        ',' expr print_list_tail
        | ',' LIT_STRING print_list_tail
        | 
        ;
arg_list:
        expr arg_list_tail
        | 
        ;

arg_list_tail:
        ',' expr arg_list_tail
        | 
        ;
%%

int yyerror(const char *s) {
  fprintf(stderr, "Error: %s in line %d\n", s, getLineNumber());
  exit(3);
  return 3;
}